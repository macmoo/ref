package jp.co.shoeisha.javarecipe.chapter02.recipe058;

public class MathSample {

	public static void main(String[] args) {
		/////////////////////////////////////////////////////////////////////////////
		// 絶対値を計算する
		/////////////////////////////////////////////////////////////////////////////
		{
			int result1 = Math.abs(-12); // =>12
			System.out.println(result1);
			double result2 = Math.abs(-12.34); // =>12.34
			System.out.println(result2);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 三角関数を計算する
		/////////////////////////////////////////////////////////////////////////////
		{
			double result1 = Math.sin(45);
			System.out.println(result1);
			double result2 = Math.cos(30);
			System.out.println(result2);
			double result3 = Math.tan(75);
			System.out.println(result3);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 平方根を求める
		/////////////////////////////////////////////////////////////////////////////
		{
			double result = Math.sqrt(9); // =>3.0
			System.out.println(result);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 累乗を求める
		/////////////////////////////////////////////////////////////////////////////
		{
			double result = Math.pow(2, 3); // =>8.0
			System.out.println(result);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 最大・最少値を求める。
		/////////////////////////////////////////////////////////////////////////////
		{
			int result1 = Math.max(5, 3); // =>5
			System.out.println(result1);
			int result2 = Math.min(5, 3); // =>3
			System.out.println(result2);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 四捨五入する
		/////////////////////////////////////////////////////////////////////////////
		{
			double result1 = Math.round(0.49); // => 0.0
			System.out.println(result1);
			double result2 = Math.round(0.51); // => 1.0
			System.out.println(result2);
		}
		/////////////////////////////////////////////////////////////////////////////
		// 切り上げ・切り上げする
		/////////////////////////////////////////////////////////////////////////////
		{
			double result1 = Math.ceil(1.09); // => 2.0
			System.out.println(result1);
			double result2 = Math.floor(1.09); // => 1.0
			System.out.println(result2);
		}
		/////////////////////////////////////////////////////////////////////////////
		// オーバーフローが予想される場合の四則演算
		/////////////////////////////////////////////////////////////////////////////
		{
			try {
				// オーバーフローが予想される場合に加算する
				int result1 = Math.addExact(Integer.MAX_VALUE, 1);// => ArithmeticException: integer overflowがスロー
				System.out.println(result1);
				
				// オーバーフローが予想される場合にlongをintに変換
				int result2 = Math.toIntExact(Long.MAX_VALUE); // => ArithmeticException: integer overflowがスロー
				System.out.println(result2);
				
			} catch (ArithmeticException e) {
				e.printStackTrace();
			}
		}
	}

}
